{"cells":[{"cell_type":"code","source":["# Let's write the existing model code into a Python script named \"disease_model.py\"\n","code = \"\"\"\\\n","# ‚úÖ Step 1: Import Libraries\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import os\n","os.makedirs(\"screenshots\", exist_ok=True)\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import classification_report, confusion_matrix, roc_auc_score, roc_curve\n","\n","# ‚úÖ Step 2: Load Dataset\n","url = \"https://raw.githubusercontent.com/plotly/datasets/master/diabetes.csv\"\n","data = pd.read_csv(url)\n","\n","print(\"üîπ Sample Data:\")\n","print(data.head())\n","\n","# ‚úÖ Step 3: Preprocessing\n","print(\"\\\\nüîç Null or Zero counts per column:\")\n","print((data == 0).sum())\n","\n","cols_to_replace = ['Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI']\n","data[cols_to_replace] = data[cols_to_replace].replace(0, np.nan)\n","data.fillna(data.mean(), inplace=True)\n","\n","# ‚úÖ Step 4: Features & Target\n","X = data.drop('Outcome', axis=1)\n","y = data['Outcome']\n","\n","# ‚úÖ Step 5: Train-Test Split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# ‚úÖ Step 6: Scaling\n","scaler = StandardScaler()\n","X_train = scaler.fit_transform(X_train)\n","X_test = scaler.transform(X_test)\n","\n","# ‚úÖ Step 7: Train Model\n","model = RandomForestClassifier(n_estimators=100, random_state=42)\n","model.fit(X_train, y_train)\n","\n","# ‚úÖ Step 8: Predictions\n","y_pred = model.predict(X_test)\n","y_proba = model.predict_proba(X_test)[:, 1]\n","\n","# ‚úÖ Step 9: Evaluation\n","print(\"\\\\nüìä Classification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","# Confusion Matrix\n","cm = confusion_matrix(y_test, y_pred)\n","plt.figure(figsize=(6,4))\n","sns.heatmap(cm, annot=True, fmt='d', cmap='YlGnBu')\n","plt.title(\"Confusion Matrix\")\n","plt.xlabel(\"Predicted\")\n","plt.ylabel(\"Actual\")\n","plt.tight_layout()\n","plt.savefig(\"screenshots/confusion_matrix.png\")\n","plt.show()\n","\n","# ROC Curve\n","fpr, tpr, _ = roc_curve(y_test, y_proba)\n","roc_auc = roc_auc_score(y_test, y_proba)\n","plt.figure(figsize=(6,4))\n","plt.plot(fpr, tpr, label=f\"ROC AUC = {roc_auc:.2f}\")\n","plt.plot([0,1], [0,1], 'k--')\n","plt.xlabel(\"False Positive Rate\")\n","plt.ylabel(\"True Positive Rate\")\n","plt.title(\"ROC Curve\")\n","plt.legend()\n","plt.grid(True)\n","plt.tight_layout()\n","plt.savefig(\"screenshots/roc_curve.png\")\n","plt.show()\n","\n","# Feature Importance\n","importances = model.feature_importances_\n","features = X.columns\n","indices = np.argsort(importances)\n","\n","plt.figure(figsize=(8,5))\n","plt.barh(range(len(indices)), importances[indices], align='center')\n","plt.yticks(range(len(indices)), [features[i] for i in indices])\n","plt.title(\"Feature Importance\")\n","plt.xlabel(\"Importance\")\n","plt.grid(True)\n","plt.tight_layout()\n","plt.savefig(\"screenshots/feature_importance.png\")\n","plt.show()\n","\"\"\"\n","\n","# Save the script\n","file_path = \"/mnt/data/disease_model.py\"\n","with open(file_path, \"w\") as f:\n","    f.write(code)\n","\n","file_path\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"05TBRFtcCL5r","executionInfo":{"status":"error","timestamp":1753171882234,"user_tz":-330,"elapsed":87,"user":{"displayName":"","userId":""}},"outputId":"8beb59fa-8f1e-4a59-c15d-6662f93f69eb"},"execution_count":null,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: '/mnt/data/disease_model.py'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-4-2407093719.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     97\u001b[0m \u001b[0;31m# Save the script\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     98\u001b[0m \u001b[0mfile_path\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"/mnt/data/disease_model.py\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 99\u001b[0;31m \u001b[0;32mwith\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_path\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"w\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    100\u001b[0m     \u001b[0mf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    101\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/mnt/data/disease_model.py'"]}]},{"cell_type":"markdown","source":["# New section"],"metadata":{"id":"_uRian7qMx20"}}],"metadata":{"colab":{"toc_visible":true,"provenance":[{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1753171944807}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}